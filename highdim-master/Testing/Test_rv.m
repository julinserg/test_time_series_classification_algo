% xUnit framework required
% https://psexton.github.io/matlab-xunit/

% R package example, uses Pearson III approx for p-value
% library(FactoMineR)
% data(wine)
% X <- wine[,3:7]
% Y <- wine[,11:20]
% coeffRV(X,Y)
% $rv
% [1] 0.6220991
% $rvstd
% [1] 8.100868
% $mean
% [1] 0.1307783
% $variance
% [1] 0.003678469
% $skewness
% [1] 1.390012
% $p.value
% [1] 1.885726e-05

classdef Test_rv < TestCase
   properties
      x
      y
   end
   
   methods
      function self = Test_rv(name)
         self = self@TestCase(name);         
         self.x = [...
            3.074                        3.000                 2.714                 2.280                1.960;...
            2.964                        2.821                 2.375                 2.280                1.680;...
            2.857                        2.929                 2.560                 1.960                2.077;...
            2.808                        2.593                 2.417                 1.913                2.160;...
            3.607                        3.429                 3.154                 2.154                2.040;...
            2.857                        3.111                 2.577                 2.040                2.077;...
            3.214                        3.222                 2.962                 2.115                2.040;...
            3.120                        2.852                 2.500                 2.200                2.185;...
            2.857                        2.815                 2.808                 1.923                2.074;...
            2.893                        3.000                 2.571                 1.846                1.680;...
            3.250                        3.286                 2.714                 1.926                1.962;...
            3.393                        3.179                 2.769                 2.038                1.920;...
            3.179                        3.286                 2.778                 2.231                1.760;...
            3.071                        3.107                 2.731                 2.120                1.800;...
            3.107                        3.143                 2.846                 2.185                1.962;...
            2.929                        3.179                 2.852                 2.000                2.037;...
            3.036                        3.179                 3.037                 2.231                1.667;...
            3.071                        2.926                 2.741                 2.000                1.880;...
            2.643                        2.786                 2.536                 1.889                1.808;...
            3.696                        3.192                 2.833                 1.826                2.385;...
            3.708                        2.926                 2.520                 2.040                2.667];
         
         self.y = [...
            3.407            3.308  2.885  2.320 1.840  2.000    1.650           3.259             2.963         3.200;...
            3.370            3.000  2.560  2.440 1.739  2.000    1.381           2.962             2.808         2.926;...
            3.250            2.929  2.769  2.192 2.250  1.750    1.250           3.077             2.800         3.077;...
            3.160            2.880  2.391  2.083 2.167  2.304    1.476           2.542             2.583         2.478;...
            3.536            3.360  3.160  2.231 2.148  1.762    1.600           3.615             3.296         3.462;...
            3.179            3.385  2.800  2.240 2.148  1.750    1.476           3.214             3.148         3.321;...
            3.429            3.500  3.038  2.200 2.385  1.826    1.476           3.250             3.222         3.385;...
            3.654            3.077  2.520  2.320 2.444  2.080    1.905           3.280             3.160         2.962;...
            3.357            3.346  3.000  2.040 2.125  1.875    1.524           3.148             2.893         3.308;...
            3.222            3.259  2.926  2.040 2.042  2.000    1.773           3.077             2.704         2.778;...
            3.607            3.385  2.889  2.115 2.160  1.955    1.571           3.286             3.036         3.222;...
            3.481            3.385  2.962  2.000 2.200  2.042    1.545           3.321             3.071         3.143;...
            3.481            3.423  2.963  2.269 2.154  1.957    1.571           3.481             3.259         3.269;...
            3.357            3.444  2.885  2.120 2.346  1.826    1.550           3.269             3.080         3.192;...
            3.357            3.370  2.846  2.240 2.280  1.750    1.524           3.333             3.037         3.370;...
            3.286            3.308  3.115  2.269 2.000  1.917    1.400           3.040             2.960         3.200;...
            3.444            3.500  3.185  2.160 2.240  1.913    1.750           3.520             3.296         3.462;...
            3.370            3.360  2.963  2.308 1.917  2.000    1.429           3.250             2.920         2.880;...
            2.889            2.800  2.500  1.962 2.111  2.080    1.318           2.680             2.308         2.556;...
            3.737            3.080  2.833  1.773 2.440  2.292    1.571           3.437             2.958         2.600;...
            3.727            2.885  2.600  2.083 2.609  2.174    1.650           3.095             3.136         2.545];
      end
      
      function setUp(self)
      end
      
      function test(self)
         [pval,rv,rvstd] = dep.rvtest(self.x,self.y);
         assertElementsAlmostEqual(pval,1.885726e-05,'absolute',1e-5);
         assertElementsAlmostEqual(rv,0.6220991,'absolute',1e-5);
         assertElementsAlmostEqual(rvstd,8.100868,'absolute',1e-5);
      end
            
      function tearDown(self)
      end
   end
end